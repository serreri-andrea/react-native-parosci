// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly: with 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "backgroundColor": "#455A64",
        "borderBottomWidth": 1,
        "borderTopWidth": 1,
        "color": "white",
        "fontSize": 15,
        "paddingBottom": 10,
        "paddingTop": 10,
        "textAlign": "center",
      }
    }
  >
    GAME MODE
  </Text>
  <RCTScrollView
    data={
      Array [
        Object {
          "cards": Array [
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "rock",
              "loose": Array [
                "paper",
              ],
              "reference": "rock",
              "wins": Array [
                "scissors",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "paper",
              "loose": Array [
                "scissors",
              ],
              "reference": "paper",
              "wins": Array [
                "rock",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "scissors",
              "loose": Array [
                "rock",
              ],
              "reference": "scissors",
              "wins": Array [
                "paper",
              ],
            },
          ],
          "images": 1,
          "modeAllow": Array [
            "pve",
            "eve",
          ],
          "reference": "classic",
        },
        Object {
          "cards": Array [
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "rock",
              "loose": Array [
                "paper",
                "spock",
              ],
              "reference": "rock",
              "wins": Array [
                "scissors",
                "lizard",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "paper",
              "loose": Array [
                "scissors",
                "lizard",
              ],
              "reference": "paper",
              "wins": Array [
                "rock",
                "spock",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "scissors",
              "loose": Array [
                "rock",
                "spock",
              ],
              "reference": "scissors",
              "wins": Array [
                "paper",
                "lizard",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "spock",
              "loose": Array [
                "lizard",
                "paper",
              ],
              "reference": "spock",
              "wins": Array [
                "rock",
                "scissors",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "lizard",
              "loose": Array [
                "rock",
                "scissors",
              ],
              "reference": "lizard",
              "wins": Array [
                "paper",
                "spock",
              ],
            },
          ],
          "images": 1,
          "modeAllow": Array [
            "pve",
            "eve",
          ],
          "reference": "extended",
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "difficulty": "dedededed",
        "mode": "dededede",
        "type": "dedededede",
        "updatePreset": "dededee",
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    invertStickyHeaders={undefined}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#15133c",
              "height": 222.33333333333334,
              "width": 750,
            }
          }
          testID={undefined}
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#15133c",
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#15133c",
              "height": 222.33333333333334,
              "width": 750,
            }
          }
          testID={undefined}
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#15133c",
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders correctly: without props 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "backgroundColor": "#455A64",
        "borderBottomWidth": 1,
        "borderTopWidth": 1,
        "color": "white",
        "fontSize": 15,
        "paddingBottom": 10,
        "paddingTop": 10,
        "textAlign": "center",
      }
    }
  >
    GAME MODE
  </Text>
  <RCTScrollView
    data={
      Array [
        Object {
          "cards": Array [
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "rock",
              "loose": Array [
                "paper",
              ],
              "reference": "rock",
              "wins": Array [
                "scissors",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "paper",
              "loose": Array [
                "scissors",
              ],
              "reference": "paper",
              "wins": Array [
                "rock",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "scissors",
              "loose": Array [
                "rock",
              ],
              "reference": "scissors",
              "wins": Array [
                "paper",
              ],
            },
          ],
          "images": 1,
          "modeAllow": Array [
            "pve",
            "eve",
          ],
          "reference": "classic",
        },
        Object {
          "cards": Array [
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "rock",
              "loose": Array [
                "paper",
                "spock",
              ],
              "reference": "rock",
              "wins": Array [
                "scissors",
                "lizard",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "paper",
              "loose": Array [
                "scissors",
                "lizard",
              ],
              "reference": "paper",
              "wins": Array [
                "rock",
                "spock",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "scissors",
              "loose": Array [
                "rock",
                "spock",
              ],
              "reference": "scissors",
              "wins": Array [
                "paper",
                "lizard",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "spock",
              "loose": Array [
                "lizard",
                "paper",
              ],
              "reference": "spock",
              "wins": Array [
                "rock",
                "scissors",
              ],
            },
            Object {
              "images": Object {
                "default": 1,
                "selected": 1,
              },
              "key": "lizard",
              "loose": Array [
                "rock",
                "scissors",
              ],
              "reference": "lizard",
              "wins": Array [
                "paper",
                "spock",
              ],
            },
          ],
          "images": 1,
          "modeAllow": Array [
            "pve",
            "eve",
          ],
          "reference": "extended",
        },
      ]
    }
    disableVirtualization={false}
    extraData={Object {}}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    invertStickyHeaders={undefined}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#15133c",
              "height": 222.33333333333334,
              "width": 750,
            }
          }
          testID={undefined}
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#15133c",
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#15133c",
              "height": 222.33333333333334,
              "width": 750,
            }
          }
          testID={undefined}
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#15133c",
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
