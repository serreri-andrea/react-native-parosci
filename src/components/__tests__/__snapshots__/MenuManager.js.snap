// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly: with 1`] = `
<View
  style={
    Object {
      "backgroundColor": "black",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "black",
        "flex": 1,
      }
    }
  >
    <View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "#455A64",
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
              "color": "white",
              "fontSize": 15,
              "paddingBottom": 10,
              "paddingTop": 10,
              "textAlign": "center",
            }
          }
        >
          GAME MODE
        </Text>
        <RCTScrollView
          data={
            Array [
              Object {
                "cards": Array [
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "rock",
                    "loose": Array [
                      "paper",
                    ],
                    "reference": "rock",
                    "wins": Array [
                      "scissors",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "paper",
                    "loose": Array [
                      "scissors",
                    ],
                    "reference": "paper",
                    "wins": Array [
                      "rock",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "scissors",
                    "loose": Array [
                      "rock",
                    ],
                    "reference": "scissors",
                    "wins": Array [
                      "paper",
                    ],
                  },
                ],
                "images": 1,
                "modeAllow": Array [
                  "pve",
                  "eve",
                ],
                "reference": "classic",
              },
              Object {
                "cards": Array [
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "rock",
                    "loose": Array [
                      "paper",
                      "spock",
                    ],
                    "reference": "rock",
                    "wins": Array [
                      "scissors",
                      "lizard",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "paper",
                    "loose": Array [
                      "scissors",
                      "lizard",
                    ],
                    "reference": "paper",
                    "wins": Array [
                      "rock",
                      "spock",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "scissors",
                    "loose": Array [
                      "rock",
                      "spock",
                    ],
                    "reference": "scissors",
                    "wins": Array [
                      "paper",
                      "lizard",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "spock",
                    "loose": Array [
                      "lizard",
                      "paper",
                    ],
                    "reference": "spock",
                    "wins": Array [
                      "rock",
                      "scissors",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "lizard",
                    "loose": Array [
                      "rock",
                      "scissors",
                    ],
                    "reference": "lizard",
                    "wins": Array [
                      "paper",
                      "spock",
                    ],
                  },
                ],
                "images": 1,
                "modeAllow": Array [
                  "pve",
                  "eve",
                ],
                "reference": "extended",
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "difficulty": "easy",
              "mode": "classic",
              "type": "pve",
              "updatePreset": [Function],
            }
          }
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#E53935",
                    "height": 222.33333333333334,
                    "width": 750,
                  }
                }
                testID={undefined}
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "backgroundColor": "#E53935",
                    }
                  }
                />
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#15133c",
                    "height": 222.33333333333334,
                    "width": 750,
                  }
                }
                testID={undefined}
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "backgroundColor": "#15133c",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "#455A64",
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
              "color": "white",
              "fontSize": 15,
              "paddingBottom": 10,
              "paddingTop": 10,
              "textAlign": "center",
            }
          }
        >
          TYPE OF GAME
        </Text>
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={undefined}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#E53935",
                  },
                ]
              }
            >
              Player vs IA
            </Text>
          </View>
        </View>
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={undefined}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#15133c",
                  },
                ]
              }
            >
              IA vs IA
            </Text>
          </View>
        </View>
      </View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "#455A64",
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
              "color": "white",
              "fontSize": 15,
              "paddingBottom": 10,
              "paddingTop": 10,
              "textAlign": "center",
            }
          }
        >
          DIFFICULTY LEVEL
        </Text>
        <RCTScrollView
          data={
            Array [
              Object {
                "images": null,
                "key": "easy",
                "reference": "easy",
              },
              Object {
                "images": null,
                "key": "medium",
                "reference": "medium",
              },
              Object {
                "images": null,
                "key": "hard",
                "reference": "hard",
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "difficulty": "easy",
              "mode": "classic",
              "type": "pve",
              "updatePreset": [Function],
            }
          }
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "width": 750,
            }
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View>
                <View
                  accessibilityComponentType="button"
                  accessibilityLabel={undefined}
                  accessibilityTraits={
                    Array [
                      "button",
                    ]
                  }
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      disabled={undefined}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#E53935",
                          },
                        ]
                      }
                    >
                      easy
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View>
                <View
                  accessibilityComponentType="button"
                  accessibilityLabel={undefined}
                  accessibilityTraits={
                    Array [
                      "button",
                    ]
                  }
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      disabled={undefined}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#15133c",
                          },
                        ]
                      }
                    >
                      medium
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View>
                <View
                  accessibilityComponentType="button"
                  accessibilityLabel={undefined}
                  accessibilityTraits={
                    Array [
                      "button",
                    ]
                  }
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      disabled={undefined}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#15133c",
                          },
                        ]
                      }
                    >
                      hard
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View>
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={undefined}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#00BFA5",
                  },
                ]
              }
            >
              Start game
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders correctly: without props 1`] = `
<View
  style={
    Object {
      "backgroundColor": "black",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    style={
      Object {
        "backgroundColor": "black",
        "flex": 1,
      }
    }
  >
    <View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "#455A64",
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
              "color": "white",
              "fontSize": 15,
              "paddingBottom": 10,
              "paddingTop": 10,
              "textAlign": "center",
            }
          }
        >
          GAME MODE
        </Text>
        <RCTScrollView
          data={
            Array [
              Object {
                "cards": Array [
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "rock",
                    "loose": Array [
                      "paper",
                    ],
                    "reference": "rock",
                    "wins": Array [
                      "scissors",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "paper",
                    "loose": Array [
                      "scissors",
                    ],
                    "reference": "paper",
                    "wins": Array [
                      "rock",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "scissors",
                    "loose": Array [
                      "rock",
                    ],
                    "reference": "scissors",
                    "wins": Array [
                      "paper",
                    ],
                  },
                ],
                "images": 1,
                "modeAllow": Array [
                  "pve",
                  "eve",
                ],
                "reference": "classic",
              },
              Object {
                "cards": Array [
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "rock",
                    "loose": Array [
                      "paper",
                      "spock",
                    ],
                    "reference": "rock",
                    "wins": Array [
                      "scissors",
                      "lizard",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "paper",
                    "loose": Array [
                      "scissors",
                      "lizard",
                    ],
                    "reference": "paper",
                    "wins": Array [
                      "rock",
                      "spock",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "scissors",
                    "loose": Array [
                      "rock",
                      "spock",
                    ],
                    "reference": "scissors",
                    "wins": Array [
                      "paper",
                      "lizard",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "spock",
                    "loose": Array [
                      "lizard",
                      "paper",
                    ],
                    "reference": "spock",
                    "wins": Array [
                      "rock",
                      "scissors",
                    ],
                  },
                  Object {
                    "images": Object {
                      "default": 1,
                      "selected": 1,
                    },
                    "key": "lizard",
                    "loose": Array [
                      "rock",
                      "scissors",
                    ],
                    "reference": "lizard",
                    "wins": Array [
                      "paper",
                      "spock",
                    ],
                  },
                ],
                "images": 1,
                "modeAllow": Array [
                  "pve",
                  "eve",
                ],
                "reference": "extended",
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "difficulty": "easy",
              "mode": "classic",
              "type": "pve",
              "updatePreset": [Function],
            }
          }
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#E53935",
                    "height": 222.33333333333334,
                    "width": 750,
                  }
                }
                testID={undefined}
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "backgroundColor": "#E53935",
                    }
                  }
                />
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#15133c",
                    "height": 222.33333333333334,
                    "width": 750,
                  }
                }
                testID={undefined}
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "backgroundColor": "#15133c",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "#455A64",
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
              "color": "white",
              "fontSize": 15,
              "paddingBottom": 10,
              "paddingTop": 10,
              "textAlign": "center",
            }
          }
        >
          TYPE OF GAME
        </Text>
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={undefined}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#E53935",
                  },
                ]
              }
            >
              Player vs IA
            </Text>
          </View>
        </View>
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={undefined}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#15133c",
                  },
                ]
              }
            >
              IA vs IA
            </Text>
          </View>
        </View>
      </View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "#455A64",
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
              "color": "white",
              "fontSize": 15,
              "paddingBottom": 10,
              "paddingTop": 10,
              "textAlign": "center",
            }
          }
        >
          DIFFICULTY LEVEL
        </Text>
        <RCTScrollView
          data={
            Array [
              Object {
                "images": null,
                "key": "easy",
                "reference": "easy",
              },
              Object {
                "images": null,
                "key": "medium",
                "reference": "medium",
              },
              Object {
                "images": null,
                "key": "hard",
                "reference": "hard",
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "difficulty": "easy",
              "mode": "classic",
              "type": "pve",
              "updatePreset": [Function],
            }
          }
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "width": 750,
            }
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View>
                <View
                  accessibilityComponentType="button"
                  accessibilityLabel={undefined}
                  accessibilityTraits={
                    Array [
                      "button",
                    ]
                  }
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      disabled={undefined}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#E53935",
                          },
                        ]
                      }
                    >
                      easy
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View>
                <View
                  accessibilityComponentType="button"
                  accessibilityLabel={undefined}
                  accessibilityTraits={
                    Array [
                      "button",
                    ]
                  }
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      disabled={undefined}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#15133c",
                          },
                        ]
                      }
                    >
                      medium
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View>
                <View
                  accessibilityComponentType="button"
                  accessibilityLabel={undefined}
                  accessibilityTraits={
                    Array [
                      "button",
                    ]
                  }
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      disabled={undefined}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "padding": 8,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "#15133c",
                          },
                        ]
                      }
                    >
                      hard
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View>
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={undefined}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#00BFA5",
                  },
                ]
              }
            >
              Start game
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
